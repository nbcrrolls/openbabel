<appConfig xmlns="http://nbcr.sdsc.edu/opal/types"
	   xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <metadata appName="Openbabel 2.3.1">
    <usage><![CDATA[Open Babel is a command line utility designed to interconvert between many file formats used in molecular modeling, computational chemistry, and many related areas]]></usage>
    <info xsd:type="xsd:string">
      <![CDATA[
	       Usage: babel [-i<input-ID>] infile [-o<output-ID>] [outfile] [OPTIONS]
	       OpenBabel has support for 118 formats in total.
	       It can read 88 formats and write 89 formats.
	       OPTIONS:
	       -d	Delete hydrogens (make all hydrogen implicit)
	       -h	Add hydrogens (make all hydrogen explicit)
	       -p <pH>	Add hydrogens appropriate for pH (use transforms in phmodel.txt)
	       -c	Center atomic coordinates at (0,0,0)
      ]]>
    </info>

    <types>
      <!-- list of flags -->
      <flags>
	<flag>
	  <id>delH</id>
	  <tag>-d</tag>
	  <textDesc>Delete Hydrogens</textDesc>
	</flag>

	<flag>
	  <id>addH</id>
	  <tag>-h</tag>
	  <textDesc>Add Hydrogens</textDesc>
	</flag>

	<flag>
	  <id>addHpH</id>
	  <tag>-p</tag>
	  <textDesc>Add Hydrogens appropriate for pH (use transforms in phmodel.txt)</textDesc>
	</flag>

	<flag>
	  <id>centerCoords</id>
	  <tag>-c</tag>
	  <textDesc>Center atomic coordinates</textDesc>
	</flag>

      </flags>

      <!-- list of tagged parameters -->
      <taggedParams>

	<param>
	  <id>ifile</id>
	  <tag>-ifile</tag>
	  <paramType>FILE</paramType>
	  <ioType>INPUT</ioType>
	  <required>true</required>
	  <textDesc>Input file </textDesc>
	</param>

        <param>
          <id>iformat</id>
	  <tag>-iformat</tag>
          <paramType>STRING</paramType>
          <ioType>INPUT</ioType>
          <textDesc>File format (include leading -i. For example: -ipdb for PDB)</textDesc>
        </param>

	<param>
	  <id>ofile</id>
	  <tag>-ofile</tag>
	  <paramType>FILE</paramType>
	  <ioType>OUTPUT</ioType>
	  <required>true</required>
	  <textDesc>Output file name</textDesc>
	</param>

        <param>
          <id>oformat</id>
	  <tag>-oformat</tag>
          <paramType>STRING</paramType>
          <ioType>OUTPUT</ioType>
          <textDesc>File format (include leading -o. For example: -osdf for MDL MOL format)</textDesc>
        </param>

        <param>
          <id>writeopt</id>
	  <tag>-x</tag>
          <paramType>STRING</paramType>
          <ioType>OUTPUT</ioType>
          <textDesc>Write options (include leading -x)
	    <![CDATA[
		     <pre>
		     For example: for CML use x[flags] (e.g. -x1ac)  
		     1 output CML V1.0 (default)
		     2 output CML V2.0 (Schema)
		     a output array format for atoms and bonds (default <atom>)
		     p prettyprint output (not implemented)
		     n output namespace (default no namespace)
		     c use 'cml' as output namespace prefix (else default) (forces n)
		     d output DOCTYPE (default none)
		     g debug output
		     v add XML version (declaration)
		     </pre>
	    ]]>
          </textDesc>
        </param>

      </taggedParams>

      <untaggedParams>
      </untaggedParams>

      <groups>

        <group>
          <name>inputParam</name>
          <elements>ifile iformat </elements>
          <textDesc>Input file name and format</textDesc>
        </group>

        <group>
          <name>outputParam</name>
          <elements>ofile oformat writeopt</elements>
          <textDesc>Output file name and format</textDesc>
        </group>

        <group>
          <name>inputFlags</name>
          <elements>delH addH addHpH centerCoords </elements>
          <textDesc>Options</textDesc>
        </group>

      </groups>
      
    </types>

  </metadata>

  <binaryLocation>/opt/openbabel-2.3.1/bin/openbabel.sh</binaryLocation>

</appConfig>
